/*
 */
package GUI_Generales;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.Timer;

/**
 *
 * @author rebel
 */
public class Resultados extends javax.swing.JInternalFrame {
    
    public JDesktopPane principal;
    public int s;
    public ArrayList<ImageIcon> imagen;
    public ArrayList<ImageIcon> imagenHistograma;
    public ArrayList<ImageIcon> imagenAux;
    public ArrayList<ImageIcon> imagenPuntos;
    public ArrayList<ImageIcon> imagenPromedio;
    
    public int contador = 1;
    public Timer timer = null;
    public String rutaProyecto;
    
    private int cantidadHistograma,cantidadPromedio,cantidadPuntoInteres;
    private int indexHistograma,indexPromedio,indexPuntoInteres;
    /**
     * Creates new form Correcci√≥nImagenes
     */
    public Resultados() {
        initComponents();
        this.setLocation((this.principal.getWidth()-this.getWidth())/2,(this.principal.getHeight()-this.getHeight())/2);
        ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
    }

    public Resultados(JDesktopPane principal,String ruta) {
        initComponents();
       
       this.principal = principal;
       this.setLocation((this.principal.getWidth()-this.getWidth())/2,(this.principal.getHeight()-this.getHeight())/2);
       ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
       rutaProyecto = ruta;
       indexHistograma = 1;
       indexPromedio = 1;
       indexPuntoInteres = 1;
       cantidadHistograma = 2;
       cantidadPromedio = 2;
       cantidadPuntoInteres = 2;
       
       cargarHistograma(ruta);
       cargarPromedios(ruta);
       cargarPuntos(ruta);
       cargarImagenes(ruta);
       
       imagenAux = imagen;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        mostrarImagenes = new javax.swing.JLabel();
        play = new javax.swing.JButton();
        izquierda = new javax.swing.JButton();
        derecha = new javax.swing.JButton();
        pause = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        muestraHistogramas = new javax.swing.JLabel();
        anteriorHistograma = new javax.swing.JButton();
        siguienteHistograma = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        muestraPromedio = new javax.swing.JLabel();
        anteriorPromedio = new javax.swing.JButton();
        siguientePromedio = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        muestraPuntos = new javax.swing.JLabel();
        anteriorPuntos = new javax.swing.JButton();
        siguientePuntos = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        menu = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setBorder(null);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 4));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Imagenes", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 16), new java.awt.Color(0, 153, 153))); // NOI18N

        mostrarImagenes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        play.setText("Play");
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        izquierda.setText("<<");
        izquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izquierdaActionPerformed(evt);
            }
        });

        derecha.setText(">>");
        derecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                derechaActionPerformed(evt);
            }
        });

        pause.setText("Pause");
        pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mostrarImagenes, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(izquierda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(play)
                        .addGap(26, 26, 26)
                        .addComponent(pause)
                        .addGap(26, 26, 26)
                        .addComponent(derecha)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mostrarImagenes, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(play)
                    .addComponent(izquierda)
                    .addComponent(derecha)
                    .addComponent(pause))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Histogramas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 16), new java.awt.Color(0, 153, 153))); // NOI18N

        muestraHistogramas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        muestraHistogramas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                muestraHistogramasMouseClicked(evt);
            }
        });

        anteriorHistograma.setText("<<");
        anteriorHistograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorHistogramaActionPerformed(evt);
            }
        });

        siguienteHistograma.setText(">>");
        siguienteHistograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteHistogramaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(anteriorHistograma)
                        .addGap(82, 82, 82)
                        .addComponent(siguienteHistograma))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(muestraHistogramas, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(muestraHistogramas, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anteriorHistograma, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(siguienteHistograma, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Promedio", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 16), new java.awt.Color(0, 153, 153))); // NOI18N

        muestraPromedio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        muestraPromedio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                muestraPromedioMouseClicked(evt);
            }
        });

        anteriorPromedio.setText("<<");
        anteriorPromedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorPromedioActionPerformed(evt);
            }
        });

        siguientePromedio.setText(">>");
        siguientePromedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguientePromedioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(muestraPromedio, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(anteriorPromedio)
                        .addGap(44, 44, 44)
                        .addComponent(siguientePromedio)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(muestraPromedio, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anteriorPromedio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(siguientePromedio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Puntos de Inter√©s", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 16), new java.awt.Color(0, 153, 153))); // NOI18N

        muestraPuntos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        muestraPuntos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                muestraPuntosMouseClicked(evt);
            }
        });

        anteriorPuntos.setText("<<");
        anteriorPuntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorPuntosActionPerformed(evt);
            }
        });

        siguientePuntos.setText(">>");
        siguientePuntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguientePuntosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(muestraPuntos, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(anteriorPuntos)
                .addGap(43, 43, 43)
                .addComponent(siguientePuntos)
                .addGap(135, 135, 135))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(muestraPuntos, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anteriorPuntos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(siguientePuntos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Acciones", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 16), new java.awt.Color(0, 153, 153))); // NOI18N

        menu.setText("Terminar");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });

        jButton1.setText("Exportar Graficas");

        jButton5.setText("Descargar .zip");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(37, 37, 37))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(menu)
                .addGap(156, 156, 156))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(menu)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(18, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        
        if(timer == null){
            timer = new Timer(600,new ActionListener(){
                @Override
                public void actionPerformed(ActionEvent ae) {

                        mostrarImagenes.setIcon(new ImageIcon(imagenAux.get(contador).getImage().getScaledInstance(340,
                    340,Image.SCALE_DEFAULT)));
                        contador++;
                        if(contador == s){
                            contador = 1;
                        }
                    }
                });
            timer.start();
        }else{
            
            if(timer.isRunning()){
                timer.restart();
            }else{
                timer = new Timer(600,new ActionListener(){
                @Override
                public void actionPerformed(ActionEvent ae) {

                        mostrarImagenes.setIcon(new ImageIcon(imagenAux.get(contador).getImage().getScaledInstance(340,
                    340,Image.SCALE_DEFAULT)));
                        contador++;
                        if(contador == s){
                            contador = 1;
                        }
                    }
                });
                timer.start();
            }
            
        }
        
        
    }//GEN-LAST:event_playActionPerformed

    private void izquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izquierdaActionPerformed
        
        if( timer != null ){
            if(timer.isRunning()){
                timer.stop();
            }

            if(contador == 1){
                contador =s;
            }
            contador--;
            mostrarImagenes.setIcon(new ImageIcon(imagenAux.get(contador).getImage().getScaledInstance(340,
                    340,Image.SCALE_DEFAULT)));
        }
        
//        mostrarImagenes.setIcon(imagen[contador]);
    }//GEN-LAST:event_izquierdaActionPerformed

    private void derechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_derechaActionPerformed
        
        if(timer != null){
            if(timer.isRunning()){
                timer.stop();
            }

            if(contador == s-1){
                contador = 0;
            }
            contador++;
            mostrarImagenes.setIcon(new ImageIcon(imagenAux.get(contador).getImage().getScaledInstance(340,
                    340,Image.SCALE_DEFAULT)));
        }
//        mostrarImagenes.setIcon(imagen[contador]);
    }//GEN-LAST:event_derechaActionPerformed

    private void pauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseActionPerformed
        timer.stop();
    }//GEN-LAST:event_pauseActionPerformed

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
        dispose();
        GUI_Generales.Principal.archivos.setEnabled(true);
        GUI_Generales.Principal.creditos.setEnabled(true);
    }//GEN-LAST:event_menuActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        File f = new File(this.rutaProyecto);
        String[] list = f.list();
        zip(list);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void muestraHistogramasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_muestraHistogramasMouseClicked
        try {
            
            String[] nombres = {"inicio.png","mitad.png","final.png"};
            String nom = nombres[indexHistograma];
            String url = rutaProyecto+"\\graficas\\"+nom;
            ProcessBuilder p = new ProcessBuilder();
            p.command("cmd.exe","/c",url);
            p.start();
        } catch (IOException ex) {
            Logger.getLogger(Resultados.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_muestraHistogramasMouseClicked

    private void anteriorHistogramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorHistogramaActionPerformed
        indexHistograma--;
         
        if( indexHistograma >= 0 && indexHistograma <= cantidadHistograma ){
            
            muestraHistogramas.setIcon(new ImageIcon(imagenHistograma.get(indexHistograma).getImage().getScaledInstance(399,
                153,Image.SCALE_DEFAULT)));
            
        }else{
            indexHistograma = 0;
        }
        
       
    }//GEN-LAST:event_anteriorHistogramaActionPerformed

    private void siguienteHistogramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteHistogramaActionPerformed
        indexHistograma++;
        
        if( indexHistograma >= 0 && indexHistograma <= cantidadHistograma ){
            
            muestraHistogramas.setIcon(new ImageIcon(imagenHistograma.get(indexHistograma).getImage().getScaledInstance(399,
                153,Image.SCALE_DEFAULT)));
            
        }else{
            indexHistograma = cantidadHistograma;
        }
                
    }//GEN-LAST:event_siguienteHistogramaActionPerformed

    private void anteriorPromedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorPromedioActionPerformed
        indexPromedio--;
         
        if( indexPromedio >= 0 && indexPromedio <= cantidadPromedio ){
            
            muestraPromedio.setIcon(new ImageIcon(imagenPromedio.get(indexPromedio).getImage().getScaledInstance(399,
                153,Image.SCALE_DEFAULT)));
            
        }else{
            indexPromedio = 0;
        }
    }//GEN-LAST:event_anteriorPromedioActionPerformed

    private void siguientePromedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguientePromedioActionPerformed
        indexPromedio++;
        
        if( indexPromedio >= 0 && indexPromedio <= cantidadPromedio ){
            
            muestraPromedio.setIcon(new ImageIcon(imagenPromedio.get(indexPromedio).getImage().getScaledInstance(399,
                153,Image.SCALE_DEFAULT)));
            
        }else{
            indexPromedio = cantidadPromedio;
        }
    }//GEN-LAST:event_siguientePromedioActionPerformed

    private void muestraPromedioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_muestraPromedioMouseClicked
        try {
            String[] nombres = {"Celsius.png","Farenheit.png","Kelvin.png"};
            String nom = nombres[indexPromedio];
            String url = rutaProyecto+"\\graficas\\"+nom;
            ProcessBuilder p = new ProcessBuilder();
            p.command("cmd.exe","/c",url);
            p.start();
        } catch (IOException ex) {
            Logger.getLogger(Resultados.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_muestraPromedioMouseClicked

    private void anteriorPuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorPuntosActionPerformed
        indexPuntoInteres--;
         
        if( indexPuntoInteres >= 0 && indexPuntoInteres <= cantidadPuntoInteres ){
            
            muestraPuntos.setIcon(new ImageIcon(imagenPuntos.get(indexPuntoInteres).getImage().getScaledInstance(399,
                153,Image.SCALE_DEFAULT)));
            
        }else{
            indexPuntoInteres = 0;
        }
    }//GEN-LAST:event_anteriorPuntosActionPerformed

    private void siguientePuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguientePuntosActionPerformed
        indexPuntoInteres++;
        
        if( indexPuntoInteres >= 0 && indexPuntoInteres <= cantidadPuntoInteres ){
            
            muestraPuntos.setIcon(new ImageIcon(imagenPuntos.get(indexPuntoInteres).getImage().getScaledInstance(399,
                153,Image.SCALE_DEFAULT)));
            
        }else{
            indexPuntoInteres = cantidadPuntoInteres;
        }
    }//GEN-LAST:event_siguientePuntosActionPerformed

    private void muestraPuntosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_muestraPuntosMouseClicked
        try {
            String[] nombres = {"Punto Interes Celsius.png","Punto Interes Farenheit.png","Punto Interes Kelvin.png"};
            String nom = nombres[indexPuntoInteres];
            String url = rutaProyecto+"\\graficas\\"+nom;
            ProcessBuilder p = new ProcessBuilder();
            p.command("cmd.exe","/c",url);
            p.start();
        } catch (IOException ex) {
            Logger.getLogger(Resultados.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_muestraPuntosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anteriorHistograma;
    private javax.swing.JButton anteriorPromedio;
    private javax.swing.JButton anteriorPuntos;
    private javax.swing.JButton derecha;
    private javax.swing.JButton izquierda;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton menu;
    private javax.swing.JLabel mostrarImagenes;
    private javax.swing.JLabel muestraHistogramas;
    private javax.swing.JLabel muestraPromedio;
    private javax.swing.JLabel muestraPuntos;
    private javax.swing.JButton pause;
    private javax.swing.JButton play;
    private javax.swing.JButton siguienteHistograma;
    private javax.swing.JButton siguientePromedio;
    private javax.swing.JButton siguientePuntos;
    // End of variables declaration//GEN-END:variables

    private void cargarImagenes(String ruta) {
       
        
        File f = new File(ruta+"\\Imagenes");
        File[] imagenes = f.listFiles();
        
        s = imagenes.length;
        imagen = new ArrayList<>();
        
        for(int i=0; i<s; i++){
            
            imagen.add(new ImageIcon(imagenes[i].getAbsolutePath()));
            
        }
        
        mostrarImagenes.setIcon(new ImageIcon(imagen.get(1).getImage().getScaledInstance(340,
                340,Image.SCALE_DEFAULT)));
        
    }

    private void cargarHistograma(String ruta) {
        
        String[] nombres = {"inicio.png","mitad.png","final.png"};
        
        imagenHistograma = new ArrayList<>();
        
        for(int i=0; i<nombres.length; i++){
            
            File f = new File(ruta+"\\graficas\\"+nombres[i]);
            imagenHistograma.add(new ImageIcon(f.getAbsolutePath())) ;
            
        }
        
        muestraHistogramas.setIcon(new ImageIcon(imagenHistograma.get(indexHistograma).getImage().getScaledInstance(399,
                153,Image.SCALE_DEFAULT)));
    }

    private void cargarPromedios(String ruta) {
        
        String[] nombres = {"Celsius.png","Farenheit.png","Kelvin.png"};
        
        imagenPromedio = new ArrayList<>();
        
        for(int i=0; i<nombres.length; i++){
            
            File f = new File(ruta+"\\graficas\\"+nombres[i]);
            imagenPromedio.add(new ImageIcon(f.getAbsolutePath()));
            
        }
        muestraPromedio.setIcon(new ImageIcon(imagenPromedio.get(indexPromedio).getImage().getScaledInstance(399,
                153,Image.SCALE_DEFAULT)));
    }

    private void cargarPuntos(String ruta) {
        String[] nombres = {"Punto Interes Celsius.png","Punto Interes Farenheit.png","Punto Interes Kelvin.png"};
        
        imagenPuntos = new ArrayList<>();
        
        for(int i=0; i<nombres.length; i++){
            
            File f = new File(ruta+"\\graficas\\"+nombres[i]);
            imagenPuntos.add(new ImageIcon(f.getAbsolutePath()));
            
        }
        
        muestraPuntos.setIcon(new ImageIcon(imagenPuntos.get(indexPuntoInteres).getImage().getScaledInstance(399,
                153,Image.SCALE_DEFAULT)));
    }
    
    public void zip(String[] archivos){
        FileOutputStream fileOutputStream = null;
        try {
            
            byte[] buffer = new byte[1024];
            
            String rutaUsuario = System.getProperty("user.home");
            String rutaProyecto = rutaUsuario+"\\Downloads\\Proyecto.zip";
            
            fileOutputStream = new FileOutputStream(rutaProyecto);
            ZipOutputStream zout = new ZipOutputStream(fileOutputStream);
            
            for(int x = 0 ; x< archivos.length ; x++){
                
                String rutaOrigen = this.rutaProyecto+"\\"+archivos[x];
                
                FileInputStream fin = new FileInputStream(rutaOrigen);
                zout.putNextEntry( new ZipEntry(archivos[x]));
                
                int length = 0;
                
                while( (length = fin.read(buffer)) > 0 ){
                    zout.write(buffer, 0, length);
                }
                
                zout.closeEntry();
                fin.close();
            }
            
            zout.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Resultados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Resultados.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fileOutputStream.close();
            } catch (IOException ex) {
                Logger.getLogger(Resultados.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
