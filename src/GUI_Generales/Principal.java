/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_Generales;


import static herramientas.GestorImagenes.rutas;
import static herramientas.GestorVideo.video;

import GUI_Imagenes.Pasos;
import GUI_Imagenes.Validacion;
import GUI_Video.Video;
import herramientas.GestorArchivo;
import herramientas.GestorImagenes;
import herramientas.GestorVideo;
import it.sauronsoftware.jave.Encoder;
import it.sauronsoftware.jave.EncoderException;
import it.sauronsoftware.jave.MultimediaInfo;
import java.awt.Dimension;
import java.io.File;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.awt.Image;
import java.awt.Graphics;
import java.awt.Toolkit;
import javax.swing.ImageIcon;
import javax.swing.UIManager;

/**
 *
 * @author Alejandra
 */
public class Principal extends javax.swing.JFrame {
    
    public static int maxPuntos, maxImagenes;
    public static int duracionVideo;
    public static ArrayList<String> Procesos,Tiempo;
    public Toolkit tool;
    public Dimension screenSize;
    
    public int respuestaSeguridad;
    public int x,y;
    public boolean abrirImagenes;
    public boolean abrirVideo;
    public Seguridad ventanaSeguridad;
    public Pasos pasos;
    public Cargando cargando;
    
    public int respuestaOk;
    public ImageIcon im,im2,im3,im4,im5;
    public Creditos creditosV;
    /**
     * Creates new form Prueba
     */
    public Principal() {
        initComponents();
        tool = Toolkit.getDefaultToolkit();
        screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize((int) screenSize.getWidth()-50, (int) screenSize.getHeight()-25);
        this.setLocationRelativeTo(this);
        this.setTitle("SMIM");
        this.setResizable(false);
        mustraIconos();
        
        setIconImage(new ImageIcon(GestorArchivo.icono()).getImage());
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageIcon icon = new ImageIcon("src\\Fotos\\fondo.jpg");
        Image image = icon.getImage();
        principal = new javax.swing.JDesktopPane(){
            public void paintComponent(Graphics g){
                g.drawImage(image,0,0,getWidth(),getHeight(),this);
            }
        };
        barra = new javax.swing.JMenuBar();
        archivos = new javax.swing.JMenu();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        AbrirVideo = new javax.swing.JMenuItem();
        AbrirImagen = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        Salir = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        creditos = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        javax.swing.GroupLayout principalLayout = new javax.swing.GroupLayout(principal);
        principal.setLayout(principalLayout);
        principalLayout.setHorizontalGroup(
            principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        principalLayout.setVerticalGroup(
            principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 304, Short.MAX_VALUE)
        );

        barra.setBackground(new java.awt.Color(255, 0, 0));
        barra.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SMIM", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Tahoma", 1, 20), new java.awt.Color(0, 153, 153))); // NOI18N
        barra.setForeground(new java.awt.Color(255, 51, 51));
        barra.setToolTipText("");
        barra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        archivos.setText("Archivos");
        archivos.add(jSeparator3);

        AbrirVideo.setText("Abrir Video");
        AbrirVideo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AbrirVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirVideoActionPerformed(evt);
            }
        });
        archivos.add(AbrirVideo);

        AbrirImagen.setText("Abrir Imagen");
        AbrirImagen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AbrirImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirImagenActionPerformed(evt);
            }
        });
        archivos.add(AbrirImagen);
        archivos.add(jSeparator1);

        Salir.setText("Salir");
        Salir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        archivos.add(Salir);
        archivos.add(jSeparator2);

        barra.add(archivos);

        creditos.setText("Créditos");
        creditos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                creditosMouseClicked(evt);
            }
        });
        barra.add(creditos);

        setJMenuBar(barra);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(principal)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(principal)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
//        this.dispose();
        System.exit(0);
        setDefaultCloseOperation(Principal.EXIT_ON_CLOSE);
    }//GEN-LAST:event_SalirActionPerformed

    private void AbrirImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirImagenActionPerformed
        archivos.setEnabled(false);
        creditos.setEnabled(false);  
        abrirI();
    }//GEN-LAST:event_AbrirImagenActionPerformed

    private void AbrirVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirVideoActionPerformed
        archivos.setEnabled(false);
        creditos.setEnabled(false);
        abrirV();
    }//GEN-LAST:event_AbrirVideoActionPerformed

    private void creditosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creditosMouseClicked
        archivos.setEnabled(false);
        creditos.setEnabled(false);
        creditosV = new Creditos(this.principal);
        principal.add(creditosV);
        creditosV.setVisible(true);
    }//GEN-LAST:event_creditosMouseClicked

    public void abrirS(){
        respuestaSeguridad = JOptionPane.showConfirmDialog(null,"¿Estas seguro de la selección?",null,
                      JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
        while(respuestaSeguridad!=0 && respuestaSeguridad!=1){
                  respuestaSeguridad = JOptionPane.showConfirmDialog(null,"¿Estas seguro de la selección?",null,
                          JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
        }
    }
    
    public void abrirI(){
        abrirImagenes = GestorImagenes.abrirImagenes();
        if(abrirImagenes==true){
            abrirS();
            if(respuestaSeguridad==0){
                if(rutas.size()>=5){
                    if(rutas.size() <= maxImagenes){
                        pasos = new Pasos(this.principal);
                        this.principal.add(pasos);
                        pasos.setVisible(true);
                    }else{
                        Validacion v = new Validacion(principal);
                        this.principal.add(v);
                        v.setVisible(true);
                    }
                }else{
                    respuestaSeguridad = JOptionPane.showConfirmDialog(null,"Se deben seleccionar un mínimo de 5 imágenes",null,
                      JOptionPane.CLOSED_OPTION,JOptionPane.WARNING_MESSAGE);
                    while(respuestaSeguridad!=0){
                              respuestaSeguridad = JOptionPane.showConfirmDialog(null,"Se deben seleccionar un mínimo de 5 imágenes",null,
                                      JOptionPane.CLOSED_OPTION,JOptionPane.WARNING_MESSAGE);
                    }
                    archivos.setEnabled(true);
                    creditos.setEnabled(true);
                }
              }else if(respuestaSeguridad==1){
                  abrirI();
              }
        }
    }
    
    public void abrirV(){
        abrirVideo = GestorVideo.abrirVideo();
        if(abrirVideo==true){
            abrirS();
            if(respuestaSeguridad==0){
                long vInfo = duracionVideo();
                cargando = new Cargando(this.principal,vInfo);
                this.principal.add(cargando);
                HiloTest.active  = true;
                Video ventanaVideo = new Video(this.principal);
                HiloTest h = new HiloTest(cargando);
                h.cargarVideo(ventanaVideo);
                h.start();
            }else if(respuestaSeguridad==1){
                abrirV();
            }
        }
    }
    
    public long duracionVideo(){
        Encoder encoder = new Encoder();
        MultimediaInfo info;
        long dInfo = 0;
        try {
            info = encoder.getInfo(new File(video));
            dInfo = info.getDuration();
//            System.out.println(""+dInfo);
        } catch (EncoderException ex) {
            Logger.getLogger(Video.class.getName()).log(Level.SEVERE, null, ex);
        }
        return dInfo;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
//                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//                UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
       
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
//                    UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
                    UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                } catch (Exception e) { }
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AbrirImagen;
    private javax.swing.JMenuItem AbrirVideo;
    private javax.swing.JMenuItem Salir;
    public static javax.swing.JMenu archivos;
    private javax.swing.JMenuBar barra;
    public static javax.swing.JMenu creditos;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    public javax.swing.JDesktopPane principal;
    // End of variables declaration//GEN-END:variables

    public void ingresarInformacion(int mP, int mI, int dVideo, 
            ArrayList<String> Pro, ArrayList<String> Ti) {
        
        maxPuntos = mP;
        maxImagenes = mI;
        duracionVideo = dVideo;
        Procesos = Pro;
        Tiempo = Ti;
        
    }

    private void mustraIconos() {
        im = new ImageIcon("src\\Fotos\\archivos.png");
        im.setImage(im.getImage().getScaledInstance(30,30,Image.SCALE_DEFAULT));
        archivos.setIcon(im);
        im2 = new ImageIcon("src\\Fotos\\creditos.png");
        im2.setImage(im2.getImage().getScaledInstance(30,30,Image.SCALE_DEFAULT));
        creditos.setIcon(im2);
        im3 = new ImageIcon("src\\Fotos\\video.png");
        im3.setImage(im3.getImage().getScaledInstance(20,20,Image.SCALE_DEFAULT));
        AbrirVideo.setIcon(im3);
        im4 = new ImageIcon("src\\Fotos\\imagen.png");
        im4.setImage(im4.getImage().getScaledInstance(20,20,Image.SCALE_DEFAULT));
        AbrirImagen.setIcon(im4);
        im5 = new ImageIcon("src\\Fotos\\salir.png");
        im5.setImage(im5.getImage().getScaledInstance(20,20,Image.SCALE_DEFAULT));
        Salir.setIcon(im5);
    }
}
